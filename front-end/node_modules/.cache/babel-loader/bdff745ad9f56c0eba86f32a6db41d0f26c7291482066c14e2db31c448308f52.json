{"ast":null,"code":"import{Link,useLocation,useNavigate}from'react-router-dom';import React,{useState,useEffect}from'react';import axios from'axios';import'./NoticeHome.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NoticeHome(){const[dataList,setDataList]=useState([]);const location=useLocation();const navigate=useNavigate();const checkLogin=async function(e,targetPath){let newWindow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;e.preventDefault();// 링크 기본 동작을 막음\nconsole.log('checkLogin 호출됨');try{const response=await fetch('/process/check-login',{method:'GET',headers:{'Content-Type':'application/json'},credentials:'include'// 쿠키를 포함하여 요청\n});const result=await response.json();console.log('응답 받음:',result);// 디버깅용 로그\nif(result.loggedIn){if(newWindow){window.open(targetPath,'_blank');}else{navigate(targetPath);// 로그인 상태라면 원래 가려던 경로로 이동\n}}else{navigate('/loginpage',{state:{from:targetPath}});// 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\n}}catch(error){console.error('세션 확인 중 오류 발생:',error);navigate('/loginpage',{state:{from:targetPath}});// 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\n}};useEffect(()=>{// 백엔드에서 게시글 목록을 가져옴\naxios.post(\"/notice\").then(response=>{console.log('응답 데이터:',response.data.posts);// 응답 데이터 출력\nsetDataList(response.data.posts);}).catch(error=>{console.error('There was an error fetching the posts!',error);});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"Notice_all\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"nameLink_layout\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"notice_layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"notice_name\",children:\"\\uACF5\\uC9C0\\uC0AC\\uD56D\"}),/*#__PURE__*/_jsx(Link,{className:\"NoticeHome_plus\",onClick:e=>checkLogin(e,'/notice'),children:\"+\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"NoticeHome_underline\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Notice_title_body\",children:dataList.length>0?(()=>{const items=[];for(let i=0;i<Math.min(3,dataList.length);i++){items.push(/*#__PURE__*/_jsx(\"div\",{className:\"Notice_body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"HomeNotice_title\",children:dataList[i].title})},i));}return items;})():/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"})})]});}export default NoticeHome;","map":{"version":3,"names":["Link","useLocation","useNavigate","React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","NoticeHome","dataList","setDataList","location","navigate","checkLogin","e","targetPath","newWindow","arguments","length","undefined","preventDefault","console","log","response","fetch","method","headers","credentials","result","json","loggedIn","window","open","state","from","error","post","then","data","posts","catch","className","children","onClick","items","i","Math","min","push","title"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/home/NoticeHome.js"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NoticeHome.css';\r\n\r\nfunction NoticeHome() {\r\n  const [dataList, setDataList] = useState([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const checkLogin = async (e, targetPath, newWindow = false) => {\r\n    e.preventDefault(); // 링크 기본 동작을 막음\r\n    console.log('checkLogin 호출됨');\r\n    try {\r\n      const response = await fetch('/process/check-login', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // 쿠키를 포함하여 요청\r\n      });\r\n      const result = await response.json();\r\n      console.log('응답 받음:', result); // 디버깅용 로그\r\n      if (result.loggedIn) {\r\n        if (newWindow) {\r\n          window.open(targetPath, '_blank');\r\n        } else {\r\n          navigate(targetPath); // 로그인 상태라면 원래 가려던 경로로 이동\r\n        }\r\n      } else {\r\n        navigate('/loginpage', { state: { from: targetPath } }); // 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('세션 확인 중 오류 발생:', error);\r\n      navigate('/loginpage', { state: { from: targetPath } }); // 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 백엔드에서 게시글 목록을 가져옴\r\n    axios\r\n      .post(`/notice`)\r\n      .then((response) => {\r\n        console.log('응답 데이터:', response.data.posts); // 응답 데이터 출력\r\n        setDataList(response.data.posts);\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the posts!', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Notice_all\">\r\n      <div className=\"nameLink_layout\">\r\n        <div className=\"notice_layout\">\r\n          <div className=\"notice_name\">공지사항</div>\r\n          <Link className=\"NoticeHome_plus\" onClick={(e) => checkLogin(e, '/notice')}>\r\n            +\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"NoticeHome_underline\"></div>\r\n      <div className=\"Notice_title_body\">\r\n        {dataList.length > 0 ? (\r\n          (() => {\r\n            const items = [];\r\n            for (let i = 0; i < Math.min(3, dataList.length); i++) {\r\n              items.push(\r\n                <div key={i} className=\"Notice_body\">\r\n                  <div className=\"HomeNotice_title\">{dataList[i].title}</div>\r\n                </div>\r\n              );\r\n            }\r\n            return items;\r\n          })()\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}