{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAC00\\uC5F0\\\\Desktop\\\\Hackathon_real\\\\Hackathon_JJIN\\\\front-end\\\\src\\\\components\\\\chat\\\\RandomChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./RandomChat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomChat() {\n  _s();\n  const [randomMessage, setRandomMessage] = useState(\"\");\n  const [randomMessages, setRandomMessages] = useState([]);\n  useEffect(() => {\n    // 서버에서 메시지를 받아와서 설정하는 부분\n    axios.get(\"/api/messages\").then(response => {\n      if (Array.isArray(response.data)) {\n        setRandomMessages(response.data);\n      } else {\n        setRandomMessages([]);\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch messages:\", error);\n      setRandomMessages([]);\n    });\n    return () => {\n      // Clean up\n    };\n  }, []);\n  const sendRandomMessage = e => {\n    e.preventDefault();\n    if (randomMessage.trim()) {\n      console.log(\"Sending random message:\", randomMessage); // 메시지 로그 찍기\n      axios.post(\"/api/messages\", {\n        message: randomMessage\n      }).then(response => {\n        setRandomMessages([...randomMessages, response.data.message]);\n        setRandomMessage(\"\");\n      }).catch(error => {\n        console.error(\"Failed to send message:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC775\\uBA85 \\uB79C\\uB364 \\uB2E8\\uCCB4 \\uCC44\\uD305\\uBC29\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"messages\",\n        children: randomMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"message\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-form\",\n      onSubmit: sendRandomMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message-input\",\n        placeholder: \"\\uD558\\uACE0 \\uC2F6\\uC740 \\uB9D0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        autoComplete: \"off\",\n        value: randomMessage,\n        onChange: e => setRandomMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomChat, \"QXiZe9i3hNcEzKLJ10I4bZNvgD4=\");\n_c = RandomChat;\nexport default RandomChat;\nvar _c;\n$RefreshReg$(_c, \"RandomChat\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RandomChat","_s","randomMessage","setRandomMessage","randomMessages","setRandomMessages","get","then","response","Array","isArray","data","catch","error","console","sendRandomMessage","e","preventDefault","trim","log","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","placeholder","autoComplete","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/chat/RandomChat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./RandomChat.css\";\r\n\r\nfunction RandomChat() {\r\n  const [randomMessage, setRandomMessage] = useState(\"\");\r\n  const [randomMessages, setRandomMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 서버에서 메시지를 받아와서 설정하는 부분\r\n    axios\r\n      .get(\"/api/messages\")\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setRandomMessages(response.data);\r\n        } else {\r\n          setRandomMessages([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to fetch messages:\", error);\r\n        setRandomMessages([]);\r\n      });\r\n\r\n    return () => {\r\n      // Clean up\r\n    };\r\n  }, []);\r\n\r\n  const sendRandomMessage = (e) => {\r\n    e.preventDefault();\r\n    if (randomMessage.trim()) {\r\n      console.log(\"Sending random message:\", randomMessage); // 메시지 로그 찍기\r\n      axios\r\n        .post(\"/api/messages\", { message: randomMessage })\r\n        .then((response) => {\r\n          setRandomMessages([...randomMessages, response.data.message]);\r\n          setRandomMessage(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Failed to send message:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <header className=\"chat-header\">\r\n        <h1>익명 랜덤 단체 채팅방</h1>\r\n      </header>\r\n      <div className=\"chat-box\">\r\n        <ul className=\"messages\">\r\n          {randomMessages.map((msg, index) => (\r\n            <li key={index} className=\"message\">\r\n              {msg}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <form className=\"chat-form\" onSubmit={sendRandomMessage}>\r\n        <input\r\n          className=\"message-input\"\r\n          placeholder=\"하고 싶은 말을 입력하세요...\"\r\n          autoComplete=\"off\"\r\n          value={randomMessage}\r\n          onChange={(e) => setRandomMessage(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}