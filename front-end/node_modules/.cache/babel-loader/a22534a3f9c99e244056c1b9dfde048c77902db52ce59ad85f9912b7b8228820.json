{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './Reservation.css';\n// import { useNavigate } from 'react-router-dom';\n// import Select from 'react-select';\n// import useUserData from '../useUserData';\n// function Reservation() {\n//   const navigate = useNavigate();\n//   const { name, id: user_id, phone_num } = useUserData();\n//   const [reservation_hour, setReservation_hour] = useState(null);\n//   const [bag_id, setBag_id] = useState(null); // 빈백 좌석 번호\n//   const [selectedBagLabel, setSelectedBagLabel] = useState('');\n//   const bagOptions = [\n//     { value: 'bag1', label: '1번 빈백' },\n//     { value: 'bag2', label: '2번 빈백' },\n//     { value: 'bag3', label: '3번 빈백' },\n//     { value: 'bag4', label: '4번 빈백' },\n//     { value: 'bag5', label: '5번 빈백' },\n//     { value: 'bag6', label: '6번 빈백' },\n//     { value: 'bag7', label: '7번 빈백' },\n//     { value: 'bag8', label: '8번 빈백' },\n//     { value: 'bag9', label: '9번 빈백' },\n//     { value: 'bag10', label: '10번 빈백' },\n//     { value: 'bag11', label: '11번 빈백' },\n//     { value: 'bag12', label: '12번 빈백' },\n//     { value: 'bag13', label: '13번 빈백' },\n//     { value: 'bag14', label: '14번 빈백' },\n//   ];\n//   const handleHourChange = (event) => {\n//     setReservation_hour(event.target.value);\n//   };\n//   const handleBagChange = (selectedOption) => {\n//     if (selectedOption) {\n//       setBag_id(selectedOption.value);\n//       setSelectedBagLabel(selectedOption.label);\n//     } else {\n//       setBag_id(null);\n//       setSelectedBagLabel('');\n//     }\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!reservation_hour || !bag_id) {\n//       alert('모든 필드를 선택해 주세요.');\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append('user_id', user_id);\n//     formData.append('reservation_hour', reservation_hour);\n//     formData.append('bag_id', bag_id);\n//     const response = await fetch('/bag/form', {\n//       method: 'POST',\n//       body: formData,\n//     });\n//     const data = await response.text();\n//     alert(data);\n//     if (response.ok) {\n//       navigate('/mypage');\n//     }\n//   };\n//   const customSelectStyle = {\n//     control: (provided) => ({\n//       ...provided,\n//       borderColor: 'lightgray',\n//       boxShadow: 'none',\n//       '&:hover': {\n//         borderColor: 'blue',\n//       },\n//     }),\n//   };\n//   // 버튼 활성화 조건 확인\n//   const isButtonEnabled = reservation_hour && bag_id;\n//   return (\n//     <div className=\"reservationPage\">\n//       <div className=\"reservation_title\">\n//         <h1>빈백 예약하기</h1>\n//       </div>\n//       <div className=\"reservation-container\">\n//         <div className=\"notice-section\">\n//           <h2>※안내사항※</h2>\n//           <p>\n//             [위치] 빈백은 중앙 도서관 3층 안내데스크 반대 방향에 있습니다.\n//             <br />\n//             [시간] 빈백 사용 가능시간은 평일 오전 9시부터 저녁 9시까지입니다.\n//             <br />\n//             [주의] 가져오신 짐, 쓰레기는 사용 종료시 꼭 챙겨주세요!!\n//             <br />\n//             [사용] 각 예약당 1시간, 일일 최대 2시간 예약 가능합니다.\n//           </p>\n//         </div>\n//         <div className=\"form-userInfo\">\n//           <h3>예약자 확인</h3>\n//           <p>이름: {name}</p>\n//           <p>학번: {user_id}</p>\n//           <p>연락처: {phone_num}</p>\n//         </div>\n//         <form className=\"submitForm\" onSubmit={handleSubmit}>\n//           <div className=\"form-hour\">\n//             <h3>시간 선택</h3>\n//             <div>\n//               <label>\n//                 <input type=\"radio\" value=\"time1\" checked={reservation_hour === 'time1'} onChange={handleHourChange} />\n//                 9:00 ~ 10:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time2\" checked={reservation_hour === 'time2'} onChange={handleHourChange} />\n//                 10:00 ~ 11:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time3\" checked={reservation_hour === 'time3'} onChange={handleHourChange} />\n//                 11:00 ~ 12:00\n//               </label>\n//             </div>\n//             <div>\n//               <label>\n//                 <input type=\"radio\" value=\"time4\" checked={reservation_hour === 'time4'} onChange={handleHourChange} />\n//                 12:00 ~ 13:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time5\" checked={reservation_hour === 'time5'} onChange={handleHourChange} />\n//                 13:00 ~ 14:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time6\" checked={reservation_hour === 'time6'} onChange={handleHourChange} />\n//                 14:00 ~ 15:00\n//               </label>\n//             </div>\n//             <div>\n//               <label>\n//                 <input type=\"radio\" value=\"time7\" checked={reservation_hour === 'time7'} onChange={handleHourChange} />\n//                 15:00 ~ 16:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time8\" checked={reservation_hour === 'time8'} onChange={handleHourChange} />\n//                 16:00 ~ 17:00\n//               </label>\n//               <label>\n//                 <input type=\"radio\" value=\"time9\" checked={reservation_hour === 'time9'} onChange={handleHourChange} />\n//                 17:00 ~ 18:00\n//               </label>\n//             </div>\n//             <div>\n//               <label>\n//                 <input\n//                   type=\"radio\"\n//                   value=\"time10\"\n//                   checked={reservation_hour === 'time10'}\n//                   onChange={handleHourChange}\n//                 />\n//                 18:00 ~ 19:00\n//               </label>\n//               <label>\n//                 <input\n//                   type=\"radio\"\n//                   value=\"time11\"\n//                   checked={reservation_hour === 'time11'}\n//                   onChange={handleHourChange}\n//                 />\n//                 19:00 ~ 20:00\n//               </label>\n//               <label>\n//                 <input\n//                   type=\"radio\"\n//                   value=\"time12\"\n//                   checked={reservation_hour === 'time12'}\n//                   onChange={handleHourChange}\n//                 />\n//                 20:00 ~ 21:00\n//               </label>\n//             </div>\n//           </div>\n//           <div className=\"form-bag\">\n//             <h3>빈백 좌석 선택</h3>\n//             <Select\n//               className=\"bagIdAlt\"\n//               options={bagOptions}\n//               value={bagOptions.find((option) => option.value === bag_id)}\n//               onChange={handleBagChange}\n//               placeholder=\"빈백 번호 선택\"\n//               styles={customSelectStyle}\n//               isClearable\n//             />\n//             {selectedBagLabel && <p>{selectedBagLabel}을 선택하셨습니다.</p>}\n//           </div>\n//           <div className=\"submitBtnPlace\">\n//             <button type=\"submit\" className={`submitBtn ${isButtonEnabled ? 'enabled' : ''}`}>\n//               예약완료\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Reservation;\nimport React,{useState,useEffect}from'react';import'./Reservation.css';import{useNavigate}from'react-router-dom';import Select from'react-select';import useUserData from'../useUserData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Reservation(){const navigate=useNavigate();const{name,id:user_id,phone_num}=useUserData();const[reservation_hour,setReservation_hour]=useState(null);const[bag_id,setBag_id]=useState(null);// 빈백 좌석 번호\nconst[selectedBagLabel,setSelectedBagLabel]=useState('');const bagOptions=Array.from({length:14},(_,i)=>({value:i+1,label:\"\".concat(i+1,\"\\uBC88 \\uBE48\\uBC31\")}));const timeOptions=['9:00 ~ 10:00','10:00 ~ 11:00','11:00 ~ 12:00','12:00 ~ 13:00','13:00 ~ 14:00','14:00 ~ 15:00','15:00 ~ 16:00','16:00 ~ 17:00','17:00 ~ 18:00','18:00 ~ 19:00','19:00 ~ 20:00','20:00 ~ 21:00'];const handleHourChange=event=>{setReservation_hour(parseInt(event.target.value));};const handleBagChange=selectedOption=>{if(selectedOption){setBag_id(selectedOption.value);setSelectedBagLabel(selectedOption.label);}else{setBag_id(null);setSelectedBagLabel('');}};const handleBagClick=(id,label)=>{setBag_id(id);setSelectedBagLabel(label);};const handleTimeClick=time=>{setReservation_hour(time);};const handleSubmit=async event=>{event.preventDefault();if(!reservation_hour||!bag_id){alert('모든 필드를 선택해 주세요.');return;}const requestBody={userId:user_id,reservation_hour,bag_id};const response=await fetch('/bags/form',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(requestBody)});if(response.ok){const data=await response.json();alert(data.message);navigate('/mypage');}else{const errorData=await response.json();alert(errorData.message);}};const customSelectStyle={control:provided=>({...provided,borderColor:'lightgray',boxShadow:'none','&:hover':{borderColor:'blue'}})};// 버튼 활성화 조건 확인\nconst isButtonEnabled=reservation_hour&&bag_id;return/*#__PURE__*/_jsxs(\"div\",{className:\"reservationPage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"reservation_title\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\uBE48\\uBC31 \\uC608\\uC57D\\uD558\\uAE30\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notice-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u203B\\uC548\\uB0B4\\uC0AC\\uD56D\\u203B\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"[\\uC704\\uCE58] \\uBE48\\uBC31\\uC740 \\uC911\\uC559 \\uB3C4\\uC11C\\uAD00 3\\uCE35 \\uC548\\uB0B4\\uB370\\uC2A4\\uD06C \\uBC18\\uB300 \\uBC29\\uD5A5\\uC5D0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"[\\uC2DC\\uAC04] \\uBE48\\uBC31 \\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uC2DC\\uAC04\\uC740 \\uD3C9\\uC77C \\uC624\\uC804 9\\uC2DC\\uBD80\\uD130 \\uC800\\uB141 9\\uC2DC\\uAE4C\\uC9C0\\uC785\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"[\\uC8FC\\uC758] \\uAC00\\uC838\\uC624\\uC2E0 \\uC9D0, \\uC4F0\\uB808\\uAE30\\uB294 \\uC0AC\\uC6A9 \\uC885\\uB8CC\\uC2DC \\uAF2D \\uCC59\\uACA8\\uC8FC\\uC138\\uC694!!\",/*#__PURE__*/_jsx(\"br\",{}),\"[\\uC0AC\\uC6A9] \\uAC01 \\uC608\\uC57D\\uB2F9 1\\uC2DC\\uAC04, \\uC77C\\uC77C \\uCD5C\\uB300 2\\uC2DC\\uAC04 \\uC608\\uC57D \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-userInfo\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC608\\uC57D\\uC790 \\uD655\\uC778\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInfo-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-label\",children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-value\",children:name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInfo-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-label\",children:\"\\uD559\\uBC88\"}),/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-value\",children:user_id})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInfo-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-label\",children:\"\\uC5F0\\uB77D\\uCC98\"}),/*#__PURE__*/_jsx(\"span\",{className:\"userInfo-value\",children:phone_num})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"submitForm\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-hour\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC2DC\\uAC04 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"div\",{className:\"time-bar\",children:timeOptions.map((time,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"time-slot \".concat(reservation_hour===time?'selected':''),onClick:()=>handleTimeClick(time),children:time},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-bag\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uBE48\\uBC31 \\uC88C\\uC11D \\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bag-seats\",children:bagOptions.map(option=>/*#__PURE__*/_jsx(\"div\",{className:\"bag-seat \".concat(bag_id===option.value?'selected':''),onClick:()=>handleBagClick(option.value,option.label),children:option.label.split('번 빈백')[0]},option.value))}),selectedBagLabel&&/*#__PURE__*/_jsxs(\"p\",{children:[selectedBagLabel,\"\\uC744 \\uC120\\uD0DD\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"submitBtnPlace\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submitBtn \".concat(isButtonEnabled?'enabled':''),children:\"\\uC608\\uC57D\\uC644\\uB8CC\"})})]})]})]});}export default Reservation;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Select","useUserData","jsx","_jsx","jsxs","_jsxs","Reservation","navigate","name","id","user_id","phone_num","reservation_hour","setReservation_hour","bag_id","setBag_id","selectedBagLabel","setSelectedBagLabel","bagOptions","Array","from","length","_","i","value","label","concat","timeOptions","handleHourChange","event","parseInt","target","handleBagChange","selectedOption","handleBagClick","handleTimeClick","time","handleSubmit","preventDefault","alert","requestBody","userId","response","fetch","method","headers","body","JSON","stringify","ok","data","json","message","errorData","customSelectStyle","control","provided","borderColor","boxShadow","isButtonEnabled","className","children","onSubmit","map","index","onClick","option","split","type"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/form/Reservation.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Reservation.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Select from 'react-select';\r\n// import useUserData from '../useUserData';\r\n\r\n// function Reservation() {\r\n//   const navigate = useNavigate();\r\n//   const { name, id: user_id, phone_num } = useUserData();\r\n\r\n//   const [reservation_hour, setReservation_hour] = useState(null);\r\n//   const [bag_id, setBag_id] = useState(null); // 빈백 좌석 번호\r\n//   const [selectedBagLabel, setSelectedBagLabel] = useState('');\r\n\r\n//   const bagOptions = [\r\n//     { value: 'bag1', label: '1번 빈백' },\r\n//     { value: 'bag2', label: '2번 빈백' },\r\n//     { value: 'bag3', label: '3번 빈백' },\r\n//     { value: 'bag4', label: '4번 빈백' },\r\n//     { value: 'bag5', label: '5번 빈백' },\r\n//     { value: 'bag6', label: '6번 빈백' },\r\n//     { value: 'bag7', label: '7번 빈백' },\r\n//     { value: 'bag8', label: '8번 빈백' },\r\n//     { value: 'bag9', label: '9번 빈백' },\r\n//     { value: 'bag10', label: '10번 빈백' },\r\n//     { value: 'bag11', label: '11번 빈백' },\r\n//     { value: 'bag12', label: '12번 빈백' },\r\n//     { value: 'bag13', label: '13번 빈백' },\r\n//     { value: 'bag14', label: '14번 빈백' },\r\n//   ];\r\n\r\n//   const handleHourChange = (event) => {\r\n//     setReservation_hour(event.target.value);\r\n//   };\r\n\r\n//   const handleBagChange = (selectedOption) => {\r\n//     if (selectedOption) {\r\n//       setBag_id(selectedOption.value);\r\n//       setSelectedBagLabel(selectedOption.label);\r\n//     } else {\r\n//       setBag_id(null);\r\n//       setSelectedBagLabel('');\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (!reservation_hour || !bag_id) {\r\n//       alert('모든 필드를 선택해 주세요.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('user_id', user_id);\r\n//     formData.append('reservation_hour', reservation_hour);\r\n//     formData.append('bag_id', bag_id);\r\n\r\n//     const response = await fetch('/bag/form', {\r\n//       method: 'POST',\r\n//       body: formData,\r\n//     });\r\n\r\n//     const data = await response.text();\r\n//     alert(data);\r\n\r\n//     if (response.ok) {\r\n//       navigate('/mypage');\r\n//     }\r\n//   };\r\n\r\n//   const customSelectStyle = {\r\n//     control: (provided) => ({\r\n//       ...provided,\r\n//       borderColor: 'lightgray',\r\n//       boxShadow: 'none',\r\n//       '&:hover': {\r\n//         borderColor: 'blue',\r\n//       },\r\n//     }),\r\n//   };\r\n\r\n//   // 버튼 활성화 조건 확인\r\n//   const isButtonEnabled = reservation_hour && bag_id;\r\n\r\n//   return (\r\n//     <div className=\"reservationPage\">\r\n//       <div className=\"reservation_title\">\r\n//         <h1>빈백 예약하기</h1>\r\n//       </div>\r\n//       <div className=\"reservation-container\">\r\n//         <div className=\"notice-section\">\r\n//           <h2>※안내사항※</h2>\r\n//           <p>\r\n//             [위치] 빈백은 중앙 도서관 3층 안내데스크 반대 방향에 있습니다.\r\n//             <br />\r\n//             [시간] 빈백 사용 가능시간은 평일 오전 9시부터 저녁 9시까지입니다.\r\n//             <br />\r\n//             [주의] 가져오신 짐, 쓰레기는 사용 종료시 꼭 챙겨주세요!!\r\n//             <br />\r\n//             [사용] 각 예약당 1시간, 일일 최대 2시간 예약 가능합니다.\r\n//           </p>\r\n//         </div>\r\n//         <div className=\"form-userInfo\">\r\n//           <h3>예약자 확인</h3>\r\n//           <p>이름: {name}</p>\r\n//           <p>학번: {user_id}</p>\r\n//           <p>연락처: {phone_num}</p>\r\n//         </div>\r\n//         <form className=\"submitForm\" onSubmit={handleSubmit}>\r\n//           <div className=\"form-hour\">\r\n//             <h3>시간 선택</h3>\r\n//             <div>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time1\" checked={reservation_hour === 'time1'} onChange={handleHourChange} />\r\n//                 9:00 ~ 10:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time2\" checked={reservation_hour === 'time2'} onChange={handleHourChange} />\r\n//                 10:00 ~ 11:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time3\" checked={reservation_hour === 'time3'} onChange={handleHourChange} />\r\n//                 11:00 ~ 12:00\r\n//               </label>\r\n//             </div>\r\n//             <div>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time4\" checked={reservation_hour === 'time4'} onChange={handleHourChange} />\r\n//                 12:00 ~ 13:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time5\" checked={reservation_hour === 'time5'} onChange={handleHourChange} />\r\n//                 13:00 ~ 14:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time6\" checked={reservation_hour === 'time6'} onChange={handleHourChange} />\r\n//                 14:00 ~ 15:00\r\n//               </label>\r\n//             </div>\r\n//             <div>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time7\" checked={reservation_hour === 'time7'} onChange={handleHourChange} />\r\n//                 15:00 ~ 16:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time8\" checked={reservation_hour === 'time8'} onChange={handleHourChange} />\r\n//                 16:00 ~ 17:00\r\n//               </label>\r\n//               <label>\r\n//                 <input type=\"radio\" value=\"time9\" checked={reservation_hour === 'time9'} onChange={handleHourChange} />\r\n//                 17:00 ~ 18:00\r\n//               </label>\r\n//             </div>\r\n//             <div>\r\n//               <label>\r\n//                 <input\r\n//                   type=\"radio\"\r\n//                   value=\"time10\"\r\n//                   checked={reservation_hour === 'time10'}\r\n//                   onChange={handleHourChange}\r\n//                 />\r\n//                 18:00 ~ 19:00\r\n//               </label>\r\n//               <label>\r\n//                 <input\r\n//                   type=\"radio\"\r\n//                   value=\"time11\"\r\n//                   checked={reservation_hour === 'time11'}\r\n//                   onChange={handleHourChange}\r\n//                 />\r\n//                 19:00 ~ 20:00\r\n//               </label>\r\n//               <label>\r\n//                 <input\r\n//                   type=\"radio\"\r\n//                   value=\"time12\"\r\n//                   checked={reservation_hour === 'time12'}\r\n//                   onChange={handleHourChange}\r\n//                 />\r\n//                 20:00 ~ 21:00\r\n//               </label>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"form-bag\">\r\n//             <h3>빈백 좌석 선택</h3>\r\n//             <Select\r\n//               className=\"bagIdAlt\"\r\n//               options={bagOptions}\r\n//               value={bagOptions.find((option) => option.value === bag_id)}\r\n//               onChange={handleBagChange}\r\n//               placeholder=\"빈백 번호 선택\"\r\n//               styles={customSelectStyle}\r\n//               isClearable\r\n//             />\r\n//             {selectedBagLabel && <p>{selectedBagLabel}을 선택하셨습니다.</p>}\r\n//           </div>\r\n\r\n//           <div className=\"submitBtnPlace\">\r\n//             <button type=\"submit\" className={`submitBtn ${isButtonEnabled ? 'enabled' : ''}`}>\r\n//               예약완료\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Reservation;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Reservation.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport useUserData from '../useUserData';\r\n\r\nfunction Reservation() {\r\n  const navigate = useNavigate();\r\n  const { name, id: user_id, phone_num } = useUserData();\r\n\r\n  const [reservation_hour, setReservation_hour] = useState(null);\r\n  const [bag_id, setBag_id] = useState(null); // 빈백 좌석 번호\r\n  const [selectedBagLabel, setSelectedBagLabel] = useState('');\r\n\r\n  const bagOptions = Array.from({ length: 14 }, (_, i) => ({\r\n    value: i + 1,\r\n    label: `${i + 1}번 빈백`,\r\n  }));\r\n\r\n  const timeOptions = [\r\n    '9:00 ~ 10:00',\r\n    '10:00 ~ 11:00',\r\n    '11:00 ~ 12:00',\r\n    '12:00 ~ 13:00',\r\n    '13:00 ~ 14:00',\r\n    '14:00 ~ 15:00',\r\n    '15:00 ~ 16:00',\r\n    '16:00 ~ 17:00',\r\n    '17:00 ~ 18:00',\r\n    '18:00 ~ 19:00',\r\n    '19:00 ~ 20:00',\r\n    '20:00 ~ 21:00',\r\n  ];\r\n  const handleHourChange = (event) => {\r\n    setReservation_hour(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleBagChange = (selectedOption) => {\r\n    if (selectedOption) {\r\n      setBag_id(selectedOption.value);\r\n      setSelectedBagLabel(selectedOption.label);\r\n    } else {\r\n      setBag_id(null);\r\n      setSelectedBagLabel('');\r\n    }\r\n  };\r\n\r\n  const handleBagClick = (id, label) => {\r\n    setBag_id(id);\r\n    setSelectedBagLabel(label);\r\n  };\r\n\r\n  const handleTimeClick = (time) => {\r\n    setReservation_hour(time);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!reservation_hour || !bag_id) {\r\n      alert('모든 필드를 선택해 주세요.');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      userId: user_id,\r\n      reservation_hour,\r\n      bag_id,\r\n    };\r\n\r\n    const response = await fetch('/bags/form', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      navigate('/mypage');\r\n    } else {\r\n      const errorData = await response.json();\r\n      alert(errorData.message);\r\n    }\r\n  };\r\n\r\n  const customSelectStyle = {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      borderColor: 'lightgray',\r\n      boxShadow: 'none',\r\n      '&:hover': {\r\n        borderColor: 'blue',\r\n      },\r\n    }),\r\n  };\r\n\r\n  // 버튼 활성화 조건 확인\r\n  const isButtonEnabled = reservation_hour && bag_id;\r\n\r\n  return (\r\n    <div className=\"reservationPage\">\r\n      <div className=\"reservation_title\">\r\n        <h1>빈백 예약하기</h1>\r\n      </div>\r\n      <div className=\"reservation-container\">\r\n        <div className=\"notice-section\">\r\n          <h2>※안내사항※</h2>\r\n          <p>\r\n            [위치] 빈백은 중앙 도서관 3층 안내데스크 반대 방향에 있습니다.\r\n            <br />\r\n            [시간] 빈백 사용 가능시간은 평일 오전 9시부터 저녁 9시까지입니다.\r\n            <br />\r\n            [주의] 가져오신 짐, 쓰레기는 사용 종료시 꼭 챙겨주세요!!\r\n            <br />\r\n            [사용] 각 예약당 1시간, 일일 최대 2시간 예약 가능합니다.\r\n          </p>\r\n        </div>\r\n        <div className=\"form-userInfo\">\r\n          <h3>예약자 확인</h3>\r\n          <div className=\"userInfo-row\">\r\n            <span className=\"userInfo-label\">이름</span>\r\n            <span className=\"userInfo-value\">{name}</span>\r\n          </div>\r\n          <div className=\"userInfo-row\">\r\n            <span className=\"userInfo-label\">학번</span>\r\n            <span className=\"userInfo-value\">{user_id}</span>\r\n          </div>\r\n          <div className=\"userInfo-row\">\r\n            <span className=\"userInfo-label\">연락처</span>\r\n            <span className=\"userInfo-value\">{phone_num}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <form className=\"submitForm\" onSubmit={handleSubmit}>\r\n          <div className=\"form-hour\">\r\n            <h3>시간 선택</h3>\r\n            <div className=\"time-bar\">\r\n              {timeOptions.map((time, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`time-slot ${reservation_hour === time ? 'selected' : ''}`}\r\n                  onClick={() => handleTimeClick(time)}\r\n                >\r\n                  {time}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-bag\">\r\n            <h3>빈백 좌석 선택</h3>\r\n            <div className=\"bag-seats\">\r\n              {bagOptions.map((option) => (\r\n                <div\r\n                  key={option.value}\r\n                  className={`bag-seat ${bag_id === option.value ? 'selected' : ''}`}\r\n                  onClick={() => handleBagClick(option.value, option.label)}\r\n                >\r\n                  {option.label.split('번 빈백')[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {selectedBagLabel && <p>{selectedBagLabel}을 선택하셨습니다.</p>}\r\n          </div>\r\n\r\n          <div className=\"submitBtnPlace\">\r\n            <button type=\"submit\" className={`submitBtn ${isButtonEnabled ? 'enabled' : ''}`}>\r\n              예약완료\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reservation;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}