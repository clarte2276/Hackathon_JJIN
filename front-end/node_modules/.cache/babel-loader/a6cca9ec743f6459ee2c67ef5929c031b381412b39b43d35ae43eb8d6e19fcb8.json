{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import io from\"socket.io-client\";import\"./Chatbot.css\";import chatbotImg from\"../images/chatbotImg.png\";import sendBtn from\"../images/sendBtn.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io();const Chatbot=_ref=>{let{currentUser}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[users,setUsers]=useState([]);const messagesEndRef=useRef(null);useEffect(()=>{socket.emit(\"join room\",{user:currentUser});socket.on(\"init messages\",msgs=>{setMessages(msgs);scrollToBottom();});socket.on(\"chat message\",msg=>{setMessages(prevMessages=>[...prevMessages,msg]);});socket.on(\"update user list\",users=>{setUsers(users);});return()=>{socket.off(\"chat message\");socket.off(\"init messages\");socket.off(\"update user list\");};},[currentUser]);useEffect(()=>{scrollToBottom();},[messages]);const handleSubmit=async e=>{e.preventDefault();if(input){try{const response=await fetch(\"/ask-gpt4\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({input})});const data=await response.json();// 사용자가 입력한 메시지를 채팅에 추가합니다.\nsocket.emit(\"chat message\",{text:input,user:currentUser});// 0.5초 딜레이 후 서버로부터 받은 GPT 응답을 \"티아코\" 사용자로 채팅에 추가합니다.\nsetTimeout(()=>{socket.emit(\"chat message\",{text:data.response,user:\"티아코\"});},500);// 입력 필드를 초기화합니다.\nsetInput(\"\");}catch(error){console.error(\"Error:\",error);}}};const handleButtonClick=(label,text)=>{socket.emit(\"chat message\",{text,user:currentUser});socket.emit(\"ask chatbot\",label);};const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container-unique\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-bot-intro-unique\",children:[/*#__PURE__*/_jsx(\"img\",{src:chatbotImg,alt:\"chatBotprofile\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC548\\uB155\\uD558\\uC138\\uC694! \\uB3D9\\uAD6D\\uB300\\uD559\\uAD50 \\uD2F0\\uCF00\\uD305\\uC694\\uC815 \\uD2F0\\uC544\\uCF54\\uC608\\uC6A9~!\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD2F0\\uCF13\\uD305 \\uBC29\\uBC95, \\uCD95\\uC81C \\uB4F1\\uC5D0 \\uB300\\uD574\\uC11C \\uAD81\\uAE08\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC9C8\\uBB38\\uD558\\uBA74 \\uB2F5\\uBCC0\\uD574\\uB4DC\\uB9B4\\uAC8C\\uC694!\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-chat-messages-unique\",children:/*#__PURE__*/_jsxs(\"ul\",{id:\"chatbot-messages-unique\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"li\",{className:msg.user===currentUser?\"chatbot-message-right-unique\":\"chatbot-message-left-unique\",children:[/*#__PURE__*/_jsxs(\"strong\",{className:msg.user===\"티아코\"?\"nickname-tiakko\":\"\",children:[msg.user,\":\"]}),\" \",msg.text]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-button-group-unique\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 1\",\"이번 공연의 가수는 누가 나오나요?\"),children:\"\\uC774\\uBC88 \\uACF5\\uC5F0\\uC758 \\uAC00\\uC218\\uB294 \\uB204\\uAC00 \\uB098\\uC624\\uB098\\uC694?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 2\",\"연예인 공연 몇 시에 시작하나요?\"),children:\"\\uC5F0\\uC608\\uC778 \\uACF5\\uC5F0 \\uBA87 \\uC2DC\\uC5D0 \\uC2DC\\uC791\\uD558\\uB098\\uC694?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 3\",\"티켓 수령 본인 확인은 어떻게 하나요?\"),children:\"\\uD2F0\\uCF13 \\uC218\\uB839 \\uBCF8\\uC778 \\uD655\\uC778\\uC740 \\uC5B4\\uB5BB\\uAC8C \\uD558\\uB098\\uC694?\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"chatbot-chatform-unique\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"chatbot-messageinput-unique\",value:input,onChange:e=>setInput(e.target.value),autoComplete:\"off\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sendBtn\",children:/*#__PURE__*/_jsx(\"img\",{src:sendBtn,alt:\"\\uC804\\uC1A1 \\uC544\\uC774\\uCF58\"})})})]})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","chatbotImg","sendBtn","jsx","_jsx","jsxs","_jsxs","socket","Chatbot","_ref","currentUser","messages","setMessages","input","setInput","users","setUsers","messagesEndRef","emit","user","on","msgs","scrollToBottom","msg","prevMessages","off","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","text","setTimeout","error","console","handleButtonClick","label","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","src","alt","id","map","index","ref","onClick","onSubmit","value","onChange","target","autoComplete","type"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/chat/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Chatbot.css\";\r\nimport chatbotImg from \"../images/chatbotImg.png\";\r\nimport sendBtn from \"../images/sendBtn.png\";\r\n\r\nconst socket = io();\r\n\r\nconst Chatbot = ({ currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join room\", { user: currentUser });\r\n\r\n    socket.on(\"init messages\", (msgs) => {\r\n      setMessages(msgs);\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on(\"chat message\", (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    socket.on(\"update user list\", (users) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"chat message\");\r\n      socket.off(\"init messages\");\r\n      socket.off(\"update user list\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      try {\r\n        const response = await fetch(\"/ask-gpt4\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ input }),\r\n        });\r\n        const data = await response.json();\r\n\r\n        // 사용자가 입력한 메시지를 채팅에 추가합니다.\r\n        socket.emit(\"chat message\", { text: input, user: currentUser });\r\n\r\n        // 0.5초 딜레이 후 서버로부터 받은 GPT 응답을 \"티아코\" 사용자로 채팅에 추가합니다.\r\n        setTimeout(() => {\r\n          socket.emit(\"chat message\", {\r\n            text: data.response,\r\n            user: \"티아코\",\r\n          });\r\n        }, 500);\r\n\r\n        // 입력 필드를 초기화합니다.\r\n        setInput(\"\");\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (label, text) => {\r\n    socket.emit(\"chat message\", { text, user: currentUser });\r\n    socket.emit(\"ask chatbot\", label);\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container-unique\">\r\n      <div className=\"chatbot-bot-intro-unique\">\r\n        <img src={chatbotImg} alt=\"chatBotprofile\" />\r\n        <p>\r\n          안녕하세요! 동국대학교 티케팅요정 티아코예용~!\r\n          <br />\r\n          티켓팅 방법, 축제 등에 대해서 궁금한 내용을 질문하면 답변해드릴게요!\r\n        </p>\r\n      </div>\r\n      <div className=\"chatbot-chat-messages-unique\">\r\n        <ul id=\"chatbot-messages-unique\">\r\n          {messages.map((msg, index) => (\r\n            <li\r\n              key={index}\r\n              className={\r\n                msg.user === currentUser\r\n                  ? \"chatbot-message-right-unique\"\r\n                  : \"chatbot-message-left-unique\"\r\n              }\r\n            >\r\n              <strong\r\n                className={msg.user === \"티아코\" ? \"nickname-tiakko\" : \"\"}\r\n              >\r\n                {msg.user}:\r\n              </strong>{\" \"}\r\n              {msg.text}\r\n            </li>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </ul>\r\n      </div>\r\n      <div className=\"chatbot-button-group-unique\">\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\"TEXT 1\", \"이번 공연의 가수는 누가 나오나요?\")\r\n          }\r\n        >\r\n          이번 공연의 가수는 누가 나오나요?\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\"TEXT 2\", \"연예인 공연 몇 시에 시작하나요?\")\r\n          }\r\n        >\r\n          연예인 공연 몇 시에 시작하나요?\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\"TEXT 3\", \"티켓 수령 본인 확인은 어떻게 하나요?\")\r\n          }\r\n        >\r\n          티켓 수령 본인 확인은 어떻게 하나요?\r\n        </button>\r\n        <form id=\"chatbot-chatform-unique\" onSubmit={handleSubmit}>\r\n          <input\r\n            id=\"chatbot-messageinput-unique\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <button type=\"submit\">\r\n            <div className=\"sendBtn\">\r\n              <img src={sendBtn} alt=\"전송 아이콘\"></img>\r\n            </div>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}