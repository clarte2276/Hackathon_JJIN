{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import axios from'axios';import TitleBody from'../notice/element/TitleBody.js';import List from'../notice/element/List.js';import ColumnList from'../notice/element/ColumnList.js';import RowList from'../notice/element/RowList.js';import CreateButton from'../notice/element/CreateButton.js';import PaginationCustom from'../notice/element/PaginationCustom.js';import NavbarTop from'../navbar/NavbarTop.js';import Footer from'../Footer.js';import'./Suggest.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Suggest=()=>{const[dataList,setDataList]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[searchKeyword,setSearchKeyword]=useState('');const postsPerPage=10;const location=useLocation();const fetchData=async function(){let keyword=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const endpoint=keyword?\"/suggest/search?keyword=\".concat(encodeURIComponent(keyword)):'/suggest';const response=await axios.get(endpoint);console.log('응답 데이터:',response.data);setDataList(response.data);}catch(error){console.error('There was an error fetching the posts!',error);}};useEffect(()=>{fetchData();},[]);useEffect(()=>{if(location.state&&location.state.newPost){console.log('새 게시글 추가:',location.state.newPost);setDataList(prevDataList=>[location.state.newPost,...prevDataList]);}},[location.state]);const getNextNo=()=>{return dataList.length>0?Math.max(...dataList.map(post=>post.no))+1:1;};const indexOfLastPost=currentPage*postsPerPage;const indexOfFirstPost=indexOfLastPost-postsPerPage;const currentPosts=dataList.slice(indexOfFirstPost,indexOfLastPost);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};const handleSearch=e=>{e.preventDefault();fetchData(searchKeyword);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavbarTop,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"SuggestAll_layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"SuggestTop_layout\",children:[/*#__PURE__*/_jsx(TitleBody,{title:\"\\uAC74\\uC758\\uC0AC\\uD56D\",body:\"\\uC774\\uACF3\\uC740 \\uAC74\\uC758\\uC0AC\\uD56D \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"SearchForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchKeyword,onChange:e=>setSearchKeyword(e.target.value),placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uAC80\\uC0C9\"})]})]}),/*#__PURE__*/_jsx(List,{headersName:['제목','작성자','작성일'],children:currentPosts.length>0?currentPosts.map((item,index)=>/*#__PURE__*/_jsxs(RowList,{children:[/*#__PURE__*/_jsx(ColumnList,{children:/*#__PURE__*/_jsx(Link,{to:\"/suggest/PostView/\".concat(item.no),style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(\"div\",{className:\"List_title\",children:item.title})})}),/*#__PURE__*/_jsx(ColumnList,{children:\"\\uC775\\uBA85\"}),/*#__PURE__*/_jsx(ColumnList,{children:item.created_date})]},index)):/*#__PURE__*/_jsx(\"div\",{children:\"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}),/*#__PURE__*/_jsx(CreateButton,{nextNo:getNextNo()}),/*#__PURE__*/_jsx(\"div\",{className:\"PaginationCustom\",children:/*#__PURE__*/_jsx(PaginationCustom,{currentPage:currentPage,totalPages:Math.ceil(dataList.length/postsPerPage),onPageChange:handlePageChange})})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default Suggest;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","TitleBody","List","ColumnList","RowList","CreateButton","PaginationCustom","NavbarTop","Footer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Suggest","dataList","setDataList","currentPage","setCurrentPage","searchKeyword","setSearchKeyword","postsPerPage","location","fetchData","keyword","arguments","length","undefined","endpoint","concat","encodeURIComponent","response","get","console","log","data","error","state","newPost","prevDataList","getNextNo","Math","max","map","post","no","indexOfLastPost","indexOfFirstPost","currentPosts","slice","handlePageChange","pageNumber","handleSearch","e","preventDefault","children","className","title","body","onSubmit","type","value","onChange","target","placeholder","headersName","item","index","to","style","textDecoration","created_date","nextNo","totalPages","ceil","onPageChange"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/suggest/Suggest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport TitleBody from '../notice/element/TitleBody.js';\r\nimport List from '../notice/element/List.js';\r\nimport ColumnList from '../notice/element/ColumnList.js';\r\nimport RowList from '../notice/element/RowList.js';\r\nimport CreateButton from '../notice/element/CreateButton.js';\r\nimport PaginationCustom from '../notice/element/PaginationCustom.js';\r\nimport NavbarTop from '../navbar/NavbarTop.js';\r\nimport Footer from '../Footer.js';\r\n\r\nimport './Suggest.css';\r\n\r\nconst Suggest = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const postsPerPage = 10;\r\n  const location = useLocation();\r\n\r\n  const fetchData = async (keyword = '') => {\r\n    try {\r\n      const endpoint = keyword ? `/suggest/search?keyword=${encodeURIComponent(keyword)}` : '/suggest';\r\n      const response = await axios.get(endpoint);\r\n      console.log('응답 데이터:', response.data);\r\n      setDataList(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the posts!', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.newPost) {\r\n      console.log('새 게시글 추가:', location.state.newPost);\r\n      setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const getNextNo = () => {\r\n    return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchData(searchKeyword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarTop />\r\n      <div className=\"SuggestAll_layout\">\r\n        <div className=\"SuggestTop_layout\">\r\n          <TitleBody title=\"건의사항\" body=\"이곳은 건의사항 페이지입니다\" />\r\n          <form onSubmit={handleSearch} className=\"SearchForm\">\r\n            <input\r\n              type=\"text\"\r\n              value={searchKeyword}\r\n              onChange={(e) => setSearchKeyword(e.target.value)}\r\n              placeholder=\"검색어를 입력하세요\"\r\n            />\r\n            <button type=\"submit\">검색</button>\r\n          </form>\r\n        </div>\r\n        <List headersName={['제목', '작성자', '작성일']}>\r\n          {currentPosts.length > 0 ? (\r\n            currentPosts.map((item, index) => (\r\n              <RowList key={index}>\r\n                <ColumnList>\r\n                  <Link to={`/suggest/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\r\n                    <div className=\"List_title\">{item.title}</div>\r\n                  </Link>\r\n                </ColumnList>\r\n                <ColumnList>익명</ColumnList>\r\n                <ColumnList>{item.created_date}</ColumnList>\r\n              </RowList>\r\n            ))\r\n          ) : (\r\n            <div>게시글이 없습니다.</div>\r\n          )}\r\n        </List>\r\n        <CreateButton nextNo={getNextNo()} />\r\n        <div className=\"PaginationCustom\">\r\n          <PaginationCustom\r\n            currentPage={currentPage}\r\n            totalPages={Math.ceil(dataList.length / postsPerPage)}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Suggest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}