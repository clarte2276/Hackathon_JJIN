{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAC00\\uC5F0\\\\Desktop\\\\Hackathon_real\\\\Hackathon_JJIN\\\\front-end\\\\src\\\\components\\\\home\\\\NoticeHome.js\",\n  _s = $RefreshSig$();\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './NoticeHome.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoticeHome() {\n  _s();\n  const [dataList, setDataList] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const checkLogin = async (e, targetPath, newWindow = false) => {\n    e.preventDefault(); // 링크 기본 동작을 막음\n    console.log('checkLogin 호출됨');\n    try {\n      const response = await fetch('/process/check-login', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // 쿠키를 포함하여 요청\n      });\n      const result = await response.json();\n      console.log('응답 받음:', result); // 디버깅용 로그\n      if (result.loggedIn) {\n        if (newWindow) {\n          window.open(targetPath, '_blank');\n        } else {\n          navigate(targetPath); // 로그인 상태라면 원래 가려던 경로로 이동\n        }\n      } else {\n        navigate('/loginpage', {\n          state: {\n            from: targetPath\n          }\n        }); // 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\n      }\n    } catch (error) {\n      console.error('세션 확인 중 오류 발생:', error);\n      navigate('/loginpage', {\n        state: {\n          from: targetPath\n        }\n      }); // 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\n    }\n  };\n  useEffect(() => {\n    // 백엔드에서 게시글 목록을 가져옴\n    axios.post(`/notice`).then(response => {\n      console.log('응답 데이터:', response.data.posts); // 응답 데이터 출력\n      setDataList(response.data.posts);\n    }).catch(error => {\n      console.error('There was an error fetching the posts!', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Notice_all\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameLink_layout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notice_layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notice_name\",\n          children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"NoticeHome_plus\",\n          onClick: e => checkLogin(e, '/notice'),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NoticeHome_underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notice_title_body\",\n      children: dataList.length > 0 ? (() => {\n        const items = [];\n        for (let i = 0; i < Math.min(3, dataList.length); i++) {\n          items.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Notice_body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HomeNotice_title\",\n              children: dataList[i].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this));\n        }\n        return items;\n      })() : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(NoticeHome, \"ZLUnfVUVIUZRvtTxW89EEIrt0bU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NoticeHome;\nexport default NoticeHome;\nvar _c;\n$RefreshReg$(_c, \"NoticeHome\");","map":{"version":3,"names":["Link","useLocation","useNavigate","React","useState","useEffect","axios","jsxDEV","_jsxDEV","NoticeHome","_s","dataList","setDataList","location","navigate","checkLogin","e","targetPath","newWindow","preventDefault","console","log","response","fetch","method","headers","credentials","result","json","loggedIn","window","open","state","from","error","post","then","data","posts","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","items","i","Math","min","push","title","_c","$RefreshReg$"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/home/NoticeHome.js"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NoticeHome.css';\r\n\r\nfunction NoticeHome() {\r\n  const [dataList, setDataList] = useState([]);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const checkLogin = async (e, targetPath, newWindow = false) => {\r\n    e.preventDefault(); // 링크 기본 동작을 막음\r\n    console.log('checkLogin 호출됨');\r\n    try {\r\n      const response = await fetch('/process/check-login', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // 쿠키를 포함하여 요청\r\n      });\r\n      const result = await response.json();\r\n      console.log('응답 받음:', result); // 디버깅용 로그\r\n      if (result.loggedIn) {\r\n        if (newWindow) {\r\n          window.open(targetPath, '_blank');\r\n        } else {\r\n          navigate(targetPath); // 로그인 상태라면 원래 가려던 경로로 이동\r\n        }\r\n      } else {\r\n        navigate('/loginpage', { state: { from: targetPath } }); // 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('세션 확인 중 오류 발생:', error);\r\n      navigate('/loginpage', { state: { from: targetPath } }); // 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 백엔드에서 게시글 목록을 가져옴\r\n    axios\r\n      .post(`/notice`)\r\n      .then((response) => {\r\n        console.log('응답 데이터:', response.data.posts); // 응답 데이터 출력\r\n        setDataList(response.data.posts);\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the posts!', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Notice_all\">\r\n      <div className=\"nameLink_layout\">\r\n        <div className=\"notice_layout\">\r\n          <div className=\"notice_name\">공지사항</div>\r\n          <Link className=\"NoticeHome_plus\" onClick={(e) => checkLogin(e, '/notice')}>\r\n            +\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"NoticeHome_underline\"></div>\r\n      <div className=\"Notice_title_body\">\r\n        {dataList.length > 0 ? (\r\n          (() => {\r\n            const items = [];\r\n            for (let i = 0; i < Math.min(3, dataList.length); i++) {\r\n              items.push(\r\n                <div key={i} className=\"Notice_body\">\r\n                  <div className=\"HomeNotice_title\">{dataList[i].title}</div>\r\n                </div>\r\n              );\r\n            }\r\n            return items;\r\n          })()\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}