{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';const useUserData=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const[name,setName]=useState(initialData.name||'');const[phone_num,setPhone_num]=useState(initialData.phone_num||'');const[id,setId]=useState(initialData.id||'');// 학번으로 사용\nconst[password,setPassword]=useState(initialData.password||'');const fetchUserData=async()=>{try{// 사용자가 로그인한 후 호출 (유저정보 가져오기)\nconst response=await axios.post('/mypage',{},{withCredentials:true});const userData=response.data;setName(userData.name||'');setPhone_num(userData.phone_num||'');setId(userData.id||'');setPassword(userData.password||'');}catch(error){console.error('사용자 데이터를 가져오는 중 오류 발생:',error);}};// 초기 유저정보 가져옴\nuseEffect(()=>{fetchUserData();},[]);const handleSave=async()=>{try{const updateData={name,phone_num,id,password};// 정보 수정 시 데이터 전달 경로\nconsole.log('Sending update data:',updateData);const response=await axios.post('/mypage/process/update',updateData);if(response.status===200){alert('변경사항이 저장되었습니다.');}else{fetchUserData();// 변경사항 저장 후 유저정보를 다시 불러옴\nthrow new Error(response.data.message);}}catch(error){console.error('변경사항을 저장하는 데 오류가 발생했습니다:',error);alert('변경사항을 저장하는 데 오류가 발생했습니다.');}};return{name,phone_num,id,password,setName,setPhone_num,setId,setPassword,handleSave,fetchUserData};};export default useUserData;","map":{"version":3,"names":["React","useState","useEffect","axios","useUserData","initialData","arguments","length","undefined","name","setName","phone_num","setPhone_num","id","setId","password","setPassword","fetchUserData","response","post","withCredentials","userData","data","error","console","handleSave","updateData","log","status","alert","Error","message"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/useUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useUserData = (initialData = {}) => {\r\n  const [name, setName] = useState(initialData.name || '');\r\n  const [phone_num, setPhone_num] = useState(initialData.phone_num || '');\r\n  const [id, setId] = useState(initialData.id || ''); // 학번으로 사용\r\n  const [password, setPassword] = useState(initialData.password || '');\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\r\n      const response = await axios.post('/mypage', {}, { withCredentials: true });\r\n      const userData = response.data;\r\n\r\n      setName(userData.name || '');\r\n      setPhone_num(userData.phone_num || '');\r\n      setId(userData.id || '');\r\n      setPassword(userData.password || '');\r\n    } catch (error) {\r\n      console.error('사용자 데이터를 가져오는 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  // 초기 유저정보 가져옴\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updateData = {\r\n        name,\r\n        phone_num,\r\n        id,\r\n        password,\r\n      };\r\n\r\n      // 정보 수정 시 데이터 전달 경로\r\n      console.log('Sending update data:', updateData);\r\n      const response = await axios.post('/mypage/process/update', updateData);\r\n\r\n      if (response.status === 200) {\r\n        alert('변경사항이 저장되었습니다.');\r\n      } else {\r\n        fetchUserData(); // 변경사항 저장 후 유저정보를 다시 불러옴\r\n        throw new Error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('변경사항을 저장하는 데 오류가 발생했습니다:', error);\r\n      alert('변경사항을 저장하는 데 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return {\r\n    name,\r\n    phone_num,\r\n    id,\r\n    password,\r\n    setName,\r\n    setPhone_num,\r\n    setId,\r\n    setPassword,\r\n    handleSave,\r\n    fetchUserData,\r\n  };\r\n};\r\n\r\nexport default useUserData;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,WAAW,CAAG,QAAAA,CAAA,CAAsB,IAArB,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACnC,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAACI,WAAW,CAACI,IAAI,EAAI,EAAE,CAAC,CACxD,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAACI,WAAW,CAACM,SAAS,EAAI,EAAE,CAAC,CACvE,KAAM,CAACE,EAAE,CAAEC,KAAK,CAAC,CAAGb,QAAQ,CAACI,WAAW,CAACQ,EAAE,EAAI,EAAE,CAAC,CAAE;AACpD,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAACI,WAAW,CAACU,QAAQ,EAAI,EAAE,CAAC,CAEpE,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAAE,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CAC3E,KAAM,CAAAC,QAAQ,CAAGH,QAAQ,CAACI,IAAI,CAE9BZ,OAAO,CAACW,QAAQ,CAACZ,IAAI,EAAI,EAAE,CAAC,CAC5BG,YAAY,CAACS,QAAQ,CAACV,SAAS,EAAI,EAAE,CAAC,CACtCG,KAAK,CAACO,QAAQ,CAACR,EAAE,EAAI,EAAE,CAAC,CACxBG,WAAW,CAACK,QAAQ,CAACN,QAAQ,EAAI,EAAE,CAAC,CACtC,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED;AACArB,SAAS,CAAC,IAAM,CACde,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,UAAU,CAAG,CACjBjB,IAAI,CACJE,SAAS,CACTE,EAAE,CACFE,QACF,CAAC,CAED;AACAS,OAAO,CAACG,GAAG,CAAC,sBAAsB,CAAED,UAAU,CAAC,CAC/C,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,IAAI,CAAC,wBAAwB,CAAEO,UAAU,CAAC,CAEvE,GAAIR,QAAQ,CAACU,MAAM,GAAK,GAAG,CAAE,CAC3BC,KAAK,CAAC,gBAAgB,CAAC,CACzB,CAAC,IAAM,CACLZ,aAAa,CAAC,CAAC,CAAE;AACjB,KAAM,IAAI,CAAAa,KAAK,CAACZ,QAAQ,CAACI,IAAI,CAACS,OAAO,CAAC,CACxC,CACF,CAAE,MAAOR,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDM,KAAK,CAAC,0BAA0B,CAAC,CACnC,CACF,CAAC,CAED,MAAO,CACLpB,IAAI,CACJE,SAAS,CACTE,EAAE,CACFE,QAAQ,CACRL,OAAO,CACPE,YAAY,CACZE,KAAK,CACLE,WAAW,CACXS,UAAU,CACVR,aACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}