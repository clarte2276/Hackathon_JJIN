{"ast":null,"code":"// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import './Chatbot.css';\n// import chatbotImg from '../images/chatbotImg.png';\n// import sendBtn from '../images/sendBtn.png';\n\n// const socket = io();\n\n// const Chatbot = ({ currentUser }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState('');\n//   const [users, setUsers] = useState([]);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     socket.emit('join room', { user: currentUser });\n\n//     socket.on('init messages', (msgs) => {\n//       setMessages(msgs);\n//       scrollToBottom();\n//     });\n\n//     socket.on('chat message', (msg) => {\n//       setMessages((prevMessages) => [...prevMessages, msg]);\n//     });\n\n//     socket.on('update user list', (users) => {\n//       setUsers(users);\n//     });\n\n//     return () => {\n//       socket.off('chat message');\n//       socket.off('init messages');\n//       socket.off('update user list');\n//     };\n//   }, [currentUser]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (input) {\n//       try {\n//         const response = await fetch('/ask-gpt4', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ input }),\n//         });\n//         const data = await response.json();\n\n//         // 사용자가 입력한 메시지를 채팅에 추가합니다.\n//         socket.emit('chat message', { text: input, user: currentUser });\n\n//         // 0.5초 딜레이 후 서버로부터 받은 GPT 응답을 \"티아코\" 사용자로 채팅에 추가합니다.\n//         setTimeout(() => {\n//           socket.emit('chat message', {\n//             text: data.response,\n//             user: '티아코',\n//           });\n//         }, 500);\n\n//         // 입력 필드를 초기화합니다.\n//         setInput('');\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleButtonClick = (label, text) => {\n//     socket.emit('chat message', { text, user: currentUser });\n//     socket.emit('ask chatbot', label);\n//   };\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className=\"chatbot-container-unique\">\n//       <div className=\"chatbot-bot-intro-unique\">\n//         <img src={chatbotImg} alt=\"chatBotprofile\" />\n//         <p>\n//           안녕하세요! 동국대학교 티케팅요정 티아코예용~!\n//           <br />\n//           티켓팅 방법, 축제 등에 대해서 궁금한 내용을 질문하면 답변해드릴게요!\n//         </p>\n//       </div>\n//       <div className=\"chatbot-chat-messages-unique\">\n//         <ul id=\"chatbot-messages-unique\">\n//           {messages.map((msg, index) => (\n//             <li\n//               key={index}\n//               className={msg.user === currentUser ? 'chatbot-message-right-unique' : 'chatbot-message-left-unique'}\n//             >\n//               <strong className={msg.user === '티아코' ? 'nickname-tiakko' : ''}>{msg.user}:</strong> {msg.text}\n//             </li>\n//           ))}\n//           <div ref={messagesEndRef} />\n//         </ul>\n//       </div>\n//       <div className=\"chatbot-button-group-unique\">\n//         <button onClick={() => handleButtonClick('TEXT 1', '이번 공연의 가수는 누가 나오나요?')}>\n//           이번 공연의 가수는 누가 나오나요?\n//         </button>\n//         <button onClick={() => handleButtonClick('TEXT 2', '연예인 공연 몇 시에 시작하나요?')}>\n//           연예인 공연 몇 시에 시작하나요?\n//         </button>\n//         <button onClick={() => handleButtonClick('TEXT 3', '티켓 수령 본인 확인은 어떻게 하나요?')}>\n//           티켓 수령 본인 확인은 어떻게 하나요?\n//         </button>\n//         <form id=\"chatbot-chatform-unique\" onSubmit={handleSubmit}>\n//           <input\n//             id=\"chatbot-messageinput-unique\"\n//             value={input}\n//             onChange={(e) => setInput(e.target.value)}\n//             autoComplete=\"off\"\n//           />\n//           <button type=\"submit\">\n//             <div className=\"sendBtn\">\n//               <img src={sendBtn} alt=\"전송 아이콘\"></img>\n//             </div>\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chatbot;","map":{"version":3,"names":[],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/chat/Chatbot.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import './Chatbot.css';\r\n// import chatbotImg from '../images/chatbotImg.png';\r\n// import sendBtn from '../images/sendBtn.png';\r\n\r\n// const socket = io();\r\n\r\n// const Chatbot = ({ currentUser }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [input, setInput] = useState('');\r\n//   const [users, setUsers] = useState([]);\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     socket.emit('join room', { user: currentUser });\r\n\r\n//     socket.on('init messages', (msgs) => {\r\n//       setMessages(msgs);\r\n//       scrollToBottom();\r\n//     });\r\n\r\n//     socket.on('chat message', (msg) => {\r\n//       setMessages((prevMessages) => [...prevMessages, msg]);\r\n//     });\r\n\r\n//     socket.on('update user list', (users) => {\r\n//       setUsers(users);\r\n//     });\r\n\r\n//     return () => {\r\n//       socket.off('chat message');\r\n//       socket.off('init messages');\r\n//       socket.off('update user list');\r\n//     };\r\n//   }, [currentUser]);\r\n\r\n//   useEffect(() => {\r\n//     scrollToBottom();\r\n//   }, [messages]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (input) {\r\n//       try {\r\n//         const response = await fetch('/ask-gpt4', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({ input }),\r\n//         });\r\n//         const data = await response.json();\r\n\r\n//         // 사용자가 입력한 메시지를 채팅에 추가합니다.\r\n//         socket.emit('chat message', { text: input, user: currentUser });\r\n\r\n//         // 0.5초 딜레이 후 서버로부터 받은 GPT 응답을 \"티아코\" 사용자로 채팅에 추가합니다.\r\n//         setTimeout(() => {\r\n//           socket.emit('chat message', {\r\n//             text: data.response,\r\n//             user: '티아코',\r\n//           });\r\n//         }, 500);\r\n\r\n//         // 입력 필드를 초기화합니다.\r\n//         setInput('');\r\n//       } catch (error) {\r\n//         console.error('Error:', error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleButtonClick = (label, text) => {\r\n//     socket.emit('chat message', { text, user: currentUser });\r\n//     socket.emit('ask chatbot', label);\r\n//   };\r\n\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chatbot-container-unique\">\r\n//       <div className=\"chatbot-bot-intro-unique\">\r\n//         <img src={chatbotImg} alt=\"chatBotprofile\" />\r\n//         <p>\r\n//           안녕하세요! 동국대학교 티케팅요정 티아코예용~!\r\n//           <br />\r\n//           티켓팅 방법, 축제 등에 대해서 궁금한 내용을 질문하면 답변해드릴게요!\r\n//         </p>\r\n//       </div>\r\n//       <div className=\"chatbot-chat-messages-unique\">\r\n//         <ul id=\"chatbot-messages-unique\">\r\n//           {messages.map((msg, index) => (\r\n//             <li\r\n//               key={index}\r\n//               className={msg.user === currentUser ? 'chatbot-message-right-unique' : 'chatbot-message-left-unique'}\r\n//             >\r\n//               <strong className={msg.user === '티아코' ? 'nickname-tiakko' : ''}>{msg.user}:</strong> {msg.text}\r\n//             </li>\r\n//           ))}\r\n//           <div ref={messagesEndRef} />\r\n//         </ul>\r\n//       </div>\r\n//       <div className=\"chatbot-button-group-unique\">\r\n//         <button onClick={() => handleButtonClick('TEXT 1', '이번 공연의 가수는 누가 나오나요?')}>\r\n//           이번 공연의 가수는 누가 나오나요?\r\n//         </button>\r\n//         <button onClick={() => handleButtonClick('TEXT 2', '연예인 공연 몇 시에 시작하나요?')}>\r\n//           연예인 공연 몇 시에 시작하나요?\r\n//         </button>\r\n//         <button onClick={() => handleButtonClick('TEXT 3', '티켓 수령 본인 확인은 어떻게 하나요?')}>\r\n//           티켓 수령 본인 확인은 어떻게 하나요?\r\n//         </button>\r\n//         <form id=\"chatbot-chatform-unique\" onSubmit={handleSubmit}>\r\n//           <input\r\n//             id=\"chatbot-messageinput-unique\"\r\n//             value={input}\r\n//             onChange={(e) => setInput(e.target.value)}\r\n//             autoComplete=\"off\"\r\n//           />\r\n//           <button type=\"submit\">\r\n//             <div className=\"sendBtn\">\r\n//               <img src={sendBtn} alt=\"전송 아이콘\"></img>\r\n//             </div>\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chatbot;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}