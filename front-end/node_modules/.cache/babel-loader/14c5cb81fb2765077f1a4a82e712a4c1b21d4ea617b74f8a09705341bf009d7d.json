{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// function CreateComment({ postId, onCommentSubmit }) {\n//   const [content, setContent] = useState('');\n//   const handleChange = (event) => {\n//     setContent(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const newComment = {\n//       content,\n//     };\n//     try {\n//       await axios.post(`/suggest/PostView/${postId}/comments`, newComment, { withCredentials: true });\n//       onCommentSubmit(); // 댓글 등록 후 부모 컴포넌트에 콜백 호출\n//       setContent(''); // 입력창 초기화\n//     } catch (error) {\n//       console.error('댓글 작성 중 오류 발생:', error);\n//       alert('댓글을 작성하는 도중 오류가 발생했습니다.');\n//     }\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <textarea\n//           className=\"commentInput\"\n//           name=\"content\"\n//           placeholder=\"댓글을 남겨보세요\"\n//           value={content}\n//           onChange={handleChange}\n//         ></textarea>\n//       </div>\n//       <div>\n//         <input type=\"submit\" value=\"등록\"></input>\n//       </div>\n//     </form>\n//   );\n// }\n// export default CreateComment;\nimport React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CreateComment(_ref){let{postId,onCommentSubmit}=_ref;const[content,setContent]=useState('');const[comments,setComments]=useState([]);useEffect(()=>{// 댓글 목록 불러오기\nconst fetchComments=async()=>{try{const response=await axios.get(\"/suggest/comments/\".concat(postId));setComments(response.data);}catch(error){console.error('댓글 목록 불러오기 중 오류 발생:',error);}};fetchComments();},[postId]);const handleChange=event=>{setContent(event.target.value);};const handleSubmit=async event=>{event.preventDefault();const newComment={content};try{await axios.post(\"/suggest/PostView/\".concat(postId,\"/comments\"),newComment,{withCredentials:true});onCommentSubmit();// 댓글 등록 후 부모 컴포넌트에 콜백 호출\nsetContent('');// 입력창 초기화\n// 댓글 목록 다시 불러오기\nconst response=await axios.get(\"/suggest/comments/\".concat(postId));setComments(response.data);}catch(error){console.error('댓글 작성 중 오류 발생:',error);alert('댓글을 작성하는 도중 오류가 발생했습니다.');}};const handleDelete=async commentId=>{const confirmDelete=window.confirm('정말로 삭제하시겠습니까?');if(confirmDelete){try{await axios.delete(\"/comments/\".concat(commentId),{withCredentials:true});// 댓글 목록 다시 불러오기\nconst response=await axios.get(\"/suggest/comments/\".concat(postId));setComments(response.data);}catch(error){console.error('댓글 삭제 중 오류 발생:',error);alert('댓글 삭제 중 오류가 발생했습니다.');}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{className:\"commentInput\",name:\"content\",placeholder:\"\\uB313\\uAE00\\uC744 \\uB0A8\\uACA8\\uBCF4\\uC138\\uC694\",value:content,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\uB4F1\\uB85D\"})})]})});}export default CreateComment;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CreateComment","_ref","postId","onCommentSubmit","content","setContent","comments","setComments","fetchComments","response","get","concat","data","error","console","handleChange","event","target","value","handleSubmit","preventDefault","newComment","post","withCredentials","alert","handleDelete","commentId","confirmDelete","window","confirm","delete","children","onSubmit","className","name","placeholder","onChange","type"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/suggest/comments/CreateComment.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function CreateComment({ postId, onCommentSubmit }) {\r\n//   const [content, setContent] = useState('');\r\n\r\n//   const handleChange = (event) => {\r\n//     setContent(event.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const newComment = {\r\n//       content,\r\n//     };\r\n\r\n//     try {\r\n//       await axios.post(`/suggest/PostView/${postId}/comments`, newComment, { withCredentials: true });\r\n//       onCommentSubmit(); // 댓글 등록 후 부모 컴포넌트에 콜백 호출\r\n//       setContent(''); // 입력창 초기화\r\n//     } catch (error) {\r\n//       console.error('댓글 작성 중 오류 발생:', error);\r\n//       alert('댓글을 작성하는 도중 오류가 발생했습니다.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <textarea\r\n//           className=\"commentInput\"\r\n//           name=\"content\"\r\n//           placeholder=\"댓글을 남겨보세요\"\r\n//           value={content}\r\n//           onChange={handleChange}\r\n//         ></textarea>\r\n//       </div>\r\n//       <div>\r\n//         <input type=\"submit\" value=\"등록\"></input>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default CreateComment;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CreateComment({ postId, onCommentSubmit }) {\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 댓글 목록 불러오기\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get(`/suggest/comments/${postId}`);\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('댓글 목록 불러오기 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newComment = {\r\n      content,\r\n    };\r\n\r\n    try {\r\n      await axios.post(`/suggest/PostView/${postId}/comments`, newComment, { withCredentials: true });\r\n      onCommentSubmit(); // 댓글 등록 후 부모 컴포넌트에 콜백 호출\r\n      setContent(''); // 입력창 초기화\r\n      // 댓글 목록 다시 불러오기\r\n      const response = await axios.get(`/suggest/comments/${postId}`);\r\n      setComments(response.data);\r\n    } catch (error) {\r\n      console.error('댓글 작성 중 오류 발생:', error);\r\n      alert('댓글을 작성하는 도중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (commentId) => {\r\n    const confirmDelete = window.confirm('정말로 삭제하시겠습니까?');\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`/comments/${commentId}`, { withCredentials: true });\r\n        // 댓글 목록 다시 불러오기\r\n        const response = await axios.get(`/suggest/comments/${postId}`);\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('댓글 삭제 중 오류 발생:', error);\r\n        alert('댓글 삭제 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <textarea\r\n            className=\"commentInput\"\r\n            name=\"content\"\r\n            placeholder=\"댓글을 남겨보세요\"\r\n            value={content}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n          <input type=\"submit\" value=\"등록\"></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateComment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}