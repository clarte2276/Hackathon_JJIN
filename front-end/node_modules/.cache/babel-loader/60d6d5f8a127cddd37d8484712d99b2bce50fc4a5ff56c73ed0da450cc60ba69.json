{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import io from\"socket.io-client\";import\"./Chatbot.css\";import chatbotImg from\"../images/chatbotImg.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io();const Chatbot=_ref=>{let{currentUser}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[users,setUsers]=useState([]);const messagesEndRef=useRef(null);useEffect(()=>{socket.emit(\"join room\",{user:currentUser});socket.on(\"init messages\",msgs=>{setMessages(msgs);scrollToBottom();});socket.on(\"chat message\",msg=>{setMessages(prevMessages=>[...prevMessages,msg]);});socket.on(\"update user list\",users=>{setUsers(users);});return()=>{socket.off(\"chat message\");socket.off(\"init messages\");socket.off(\"update user list\");};},[currentUser]);useEffect(()=>{scrollToBottom();},[messages]);const handleButtonClick=(label,text)=>{socket.emit(\"chat message\",{text,user:currentUser});socket.emit(\"ask chatbot\",label);};const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container-unique\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-bot-intro-unique\",children:[/*#__PURE__*/_jsx(\"img\",{src:chatbotImg,alt:\"chatBotprofile\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC548\\uB155\\uD558\\uC138\\uC694! \\uB3D9\\uAD6D\\uB300\\uD559\\uAD50 \\uAFC8\\uC758 \\uC694\\uC815 \\uB0B4\\uAFC8\\uCF54\\uC608\\uC6A9~!\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uBE48\\uBC31 \\uC0AC\\uC6A9\\uBC95 \\uBC0F \\uC815\\uBCF4 \\uB4F1\\uC5D0 \\uB300\\uD574\\uC11C \\uAD81\\uAE08\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC9C8\\uBB38\\uD558\\uBA74 \\uB2F5\\uBCC0\\uD574\\uB4DC\\uB9B4\\uAC8C\\uC694!\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-chat-messages-unique\",children:/*#__PURE__*/_jsxs(\"ul\",{id:\"chatbot-messages-unique\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"li\",{className:msg.user===currentUser?\"chatbot-message-right-unique\":\"chatbot-message-left-unique\",children:[/*#__PURE__*/_jsxs(\"strong\",{className:msg.user===\"내꿈코\"?\"nickname-tiakko\":\"\",children:[msg.user,\":\"]}),\" \",msg.text]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-button-group-unique\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 1\",\"나의 공강을 책임질 빈백의 위치를 알려줘!\"),children:\"\\uB098\\uC758 \\uACF5\\uAC15\\uC744 \\uCC45\\uC784\\uC9C8 \\uBE48\\uBC31\\uC758 \\uC704\\uCE58\\uB97C \\uC54C\\uB824\\uC918!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 2\",\"빈백 운영시간은 어떻게 돼?\"),children:\"\\uBE48\\uBC31 \\uC6B4\\uC601\\uC2DC\\uAC04\\uC740 \\uC5B4\\uB5BB\\uAC8C \\uB3FC?\\\"\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick(\"TEXT 3\",\"나의 완벽한 숙면을 위해 음악을 추천해줄래?\"),children:\"\\uB098\\uC758 \\uC644\\uBCBD\\uD55C \\uC219\\uBA74\\uC744 \\uC704\\uD574 \\uC74C\\uC545\\uC744 \\uCD94\\uCC9C\\uD574\\uC904\\uB798?\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","chatbotImg","jsx","_jsx","jsxs","_jsxs","socket","Chatbot","_ref","currentUser","messages","setMessages","input","setInput","users","setUsers","messagesEndRef","emit","user","on","msgs","scrollToBottom","msg","prevMessages","off","handleButtonClick","label","text","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","src","alt","id","map","index","ref","onClick"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/chat/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Chatbot.css\";\r\nimport chatbotImg from \"../images/chatbotImg.png\";\r\n\r\nconst socket = io();\r\n\r\nconst Chatbot = ({ currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join room\", { user: currentUser });\r\n\r\n    socket.on(\"init messages\", (msgs) => {\r\n      setMessages(msgs);\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on(\"chat message\", (msg) => {\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    socket.on(\"update user list\", (users) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"chat message\");\r\n      socket.off(\"init messages\");\r\n      socket.off(\"update user list\");\r\n    };\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleButtonClick = (label, text) => {\r\n    socket.emit(\"chat message\", { text, user: currentUser });\r\n    socket.emit(\"ask chatbot\", label);\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container-unique\">\r\n      <div className=\"chatbot-bot-intro-unique\">\r\n        <img src={chatbotImg} alt=\"chatBotprofile\" />\r\n        <p>\r\n          안녕하세요! 동국대학교 꿈의 요정 내꿈코예용~!\r\n          <br />\r\n          빈백 사용법 및 정보 등에 대해서 궁금한 내용을 질문하면 답변해드릴게요!\r\n        </p>\r\n      </div>\r\n      <div className=\"chatbot-chat-messages-unique\">\r\n        <ul id=\"chatbot-messages-unique\">\r\n          {messages.map((msg, index) => (\r\n            <li\r\n              key={index}\r\n              className={\r\n                msg.user === currentUser\r\n                  ? \"chatbot-message-right-unique\"\r\n                  : \"chatbot-message-left-unique\"\r\n              }\r\n            >\r\n              <strong\r\n                className={msg.user === \"내꿈코\" ? \"nickname-tiakko\" : \"\"}\r\n              >\r\n                {msg.user}:\r\n              </strong>{\" \"}\r\n              {msg.text}\r\n            </li>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </ul>\r\n      </div>\r\n      <div className=\"chatbot-button-group-unique\">\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\r\n              \"TEXT 1\",\r\n              \"나의 공강을 책임질 빈백의 위치를 알려줘!\"\r\n            )\r\n          }\r\n        >\r\n          나의 공강을 책임질 빈백의 위치를 알려줘!\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\"TEXT 2\", \"빈백 운영시간은 어떻게 돼?\")\r\n          }\r\n        >\r\n          빈백 운영시간은 어떻게 돼?\"\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            handleButtonClick(\r\n              \"TEXT 3\",\r\n              \"나의 완벽한 숙면을 위해 음악을 추천해줄래?\"\r\n            )\r\n          }\r\n        >\r\n          나의 완벽한 숙면을 위해 음악을 추천해줄래?\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}