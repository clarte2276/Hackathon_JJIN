{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import io from'socket.io-client';import'./Chatbot.css';import chatbotImg from'../images/chatbotImg.png';import sendBtn from'../images/sendBtn.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io();const aiuser='내꿈코';const Chatbot=_ref=>{let{currentUser}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const messagesEndRef=useRef(null);useEffect(()=>{socket.emit('join room',{user:currentUser});socket.on('init messages',msgs=>{setMessages(msgs);scrollToBottom();});socket.on('chat message',msg=>{console.log('Received message: ',msg);setMessages(prevMessages=>[...prevMessages,msg]);});socket.on('gpt response',msg=>{console.log('Received GPT response: ',msg);setMessages(prevMessages=>[...prevMessages,msg]);});return()=>{socket.off('chat message');socket.off('init messages');socket.off('gpt response');};},[currentUser]);useEffect(()=>{scrollToBottom();},[messages]);const handleSubmit=async e=>{e.preventDefault();if(input){// 사용자 메시지 전송\nsocket.emit('chat message',{text:input,user:currentUser});try{const response=await fetch('/ask-gpt4',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({input})});const data=await response.json();console.log('Server response: ',data);// GPT 응답을 내꿈코로 전송\nsocket.emit('gpt response',{text:data.response,user:aiuser});setInput('');}catch(error){console.error('Error:',error);}}};const handleButtonClick=(label,text)=>{socket.emit('chat message',{text,user:currentUser});socket.emit('ask chatbot',{label});};const handleSeatsButtonClick=async()=>{const userText='현재 예약 가능한 좌석 현황을 알려주라';// 사용자 메시지 전송\nsocket.emit('chat message',{text:userText,user:currentUser});try{const response=await fetch('/api/empty');const data=await response.json();const availableSeats=data.availableSeats;// 수정된 부분\nconst text=\"\\uD604\\uC7AC \\uC608\\uC57D \\uAC00\\uB2A5\\uD55C \\uC88C\\uC11D\\uC740 \".concat(availableSeats,\"\\uAC1C\\uC785\\uB2C8\\uB2E4.\");// 내꿈코 메시지로 전송\nsocket.emit('gpt response',{text,user:aiuser});}catch(error){console.error('Error fetching empty seats:',error);}};const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container-unique\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dream BAG\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-bot-intro-unique\",children:[/*#__PURE__*/_jsx(\"img\",{src:chatbotImg,alt:\"chatBotprofile\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC548\\uB155\\uD558\\uC138\\uC694! \\uB3D9\\uAD6D\\uB300\\uD559\\uAD50 \\uAFC8\\uC758 \\uC694\\uC815 \\uB0B4\\uAFC8\\uCF54\\uC608\\uC6A9~!\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uBE48\\uBC31 \\uC0AC\\uC6A9\\uBC95 \\uBC0F \\uC815\\uBCF4 \\uB4F1\\uC5D0 \\uB300\\uD574\\uC11C \\uAD81\\uAE08\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC9C8\\uBB38\\uD558\\uBA74 \\uB2F5\\uBCC0\\uD574\\uB4DC\\uB9B4\\uAC8C\\uC694!\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-chat-messages-unique\",children:/*#__PURE__*/_jsxs(\"ul\",{id:\"chatbot-messages-unique\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(\"li\",{className:msg.user===aiuser?'chatbot-message-left-unique':'chatbot-message-right-unique',children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"strong\",{className:msg.user===aiuser?'nickname':'',children:[msg.user,\":\"]}),\" \",msg.text]})},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-button-group-unique\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-button-row\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('TEXT 1','나의 공강을 책임질 빈백의 위치를 알려줘!'),children:\"\\uB098\\uC758 \\uACF5\\uAC15\\uC744 \\uCC45\\uC784\\uC9C8 \\uBE48\\uBC31\\uC758 \\uC704\\uCE58\\uB97C \\uC54C\\uB824\\uC918!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('TEXT 2','빈백 운영시간은 어떻게 돼?'),children:\"\\uBE48\\uBC31 \\uC6B4\\uC601\\uC2DC\\uAC04\\uC740 \\uC5B4\\uB5BB\\uAC8C \\uB3FC?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-button-row\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('TEXT 3','나의 완벽한 숙면을 위해 음악을 추천해줄래?'),children:\"\\uB098\\uC758 \\uC644\\uBCBD\\uD55C \\uC219\\uBA74\\uC744 \\uC704\\uD574 \\uC74C\\uC545\\uC744 \\uCD94\\uCC9C\\uD574\\uC904\\uB798?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSeatsButtonClick,children:\"\\uD604\\uC7AC \\uC608\\uC57D \\uAC00\\uB2A5\\uD55C \\uC88C\\uC11D \\uD604\\uD669\\uC744 \\uC54C\\uB824\\uC8FC\\uB77C\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{id:\"chatbot-chatform-unique\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"chatbot-messageinput-unique\",placeholder:\"typing your message\",value:input,onChange:e=>setInput(e.target.value),autoComplete:\"off\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sendBtn\",children:/*#__PURE__*/_jsx(\"img\",{src:sendBtn,alt:\"\\uC804\\uC1A1 \\uC544\\uC774\\uCF58\"})})})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","chatbotImg","sendBtn","jsx","_jsx","jsxs","_jsxs","socket","aiuser","Chatbot","_ref","currentUser","messages","setMessages","input","setInput","messagesEndRef","emit","user","on","msgs","scrollToBottom","msg","console","log","prevMessages","off","handleSubmit","e","preventDefault","text","response","fetch","method","headers","body","JSON","stringify","data","json","error","handleButtonClick","label","handleSeatsButtonClick","userText","availableSeats","concat","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","src","alt","id","map","index","ref","onClick","onSubmit","placeholder","value","onChange","target","autoComplete","type"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/chat/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Chatbot.css';\r\nimport chatbotImg from '../images/chatbotImg.png';\r\nimport sendBtn from '../images/sendBtn.png';\r\n\r\nconst socket = io();\r\nconst aiuser = '내꿈코';\r\n\r\nconst Chatbot = ({ currentUser }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.emit('join room', { user: currentUser });\r\n\r\n    socket.on('init messages', (msgs) => {\r\n      setMessages(msgs);\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on('chat message', (msg) => {\r\n      console.log('Received message: ', msg);\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    socket.on('gpt response', (msg) => {\r\n      console.log('Received GPT response: ', msg);\r\n      setMessages((prevMessages) => [...prevMessages, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('chat message');\r\n      socket.off('init messages');\r\n      socket.off('gpt response');\r\n    };\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      // 사용자 메시지 전송\r\n      socket.emit('chat message', { text: input, user: currentUser });\r\n\r\n      try {\r\n        const response = await fetch('/ask-gpt4', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ input }),\r\n        });\r\n        const data = await response.json();\r\n        console.log('Server response: ', data);\r\n\r\n        // GPT 응답을 내꿈코로 전송\r\n        socket.emit('gpt response', {\r\n          text: data.response,\r\n          user: aiuser,\r\n        });\r\n\r\n        setInput('');\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (label, text) => {\r\n    socket.emit('chat message', { text, user: currentUser });\r\n    socket.emit('ask chatbot', { label });\r\n  };\r\n\r\n  const handleSeatsButtonClick = async () => {\r\n    const userText = '현재 예약 가능한 좌석 현황을 알려주라';\r\n    // 사용자 메시지 전송\r\n    socket.emit('chat message', { text: userText, user: currentUser });\r\n\r\n    try {\r\n      const response = await fetch('/api/empty');\r\n      const data = await response.json();\r\n      const availableSeats = data.availableSeats; // 수정된 부분\r\n      const text = `현재 예약 가능한 좌석은 ${availableSeats}개입니다.`;\r\n      // 내꿈코 메시지로 전송\r\n      socket.emit('gpt response', { text, user: aiuser });\r\n    } catch (error) {\r\n      console.error('Error fetching empty seats:', error);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container-unique\">\r\n      <h1>Dream BAG</h1>\r\n      <div className=\"chatbot-bot-intro-unique\">\r\n        <img src={chatbotImg} alt=\"chatBotprofile\" />\r\n        <p>\r\n          안녕하세요! 동국대학교 꿈의 요정 내꿈코예용~!\r\n          <br />\r\n          빈백 사용법 및 정보 등에 대해서 궁금한 내용을 질문하면 답변해드릴게요!\r\n        </p>\r\n      </div>\r\n      <div className=\"chatbot-chat-messages-unique\">\r\n        <ul id=\"chatbot-messages-unique\">\r\n          {messages.map((msg, index) => (\r\n            <li\r\n              key={index}\r\n              className={msg.user === aiuser ? 'chatbot-message-left-unique' : 'chatbot-message-right-unique'}\r\n            >\r\n              <div className=\"message-content\">\r\n                <strong className={msg.user === aiuser ? 'nickname' : ''}>{msg.user}:</strong> {msg.text}\r\n              </div>\r\n            </li>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </ul>\r\n      </div>\r\n      <div className=\"chatbot-button-group-unique\">\r\n        <div className=\"chatbot-button-row\">\r\n          <button onClick={() => handleButtonClick('TEXT 1', '나의 공강을 책임질 빈백의 위치를 알려줘!')}>\r\n            나의 공강을 책임질 빈백의 위치를 알려줘!\r\n          </button>\r\n          <button onClick={() => handleButtonClick('TEXT 2', '빈백 운영시간은 어떻게 돼?')}>\r\n            빈백 운영시간은 어떻게 돼?\r\n          </button>\r\n        </div>\r\n        <div className=\"chatbot-button-row\">\r\n          <button onClick={() => handleButtonClick('TEXT 3', '나의 완벽한 숙면을 위해 음악을 추천해줄래?')}>\r\n            나의 완벽한 숙면을 위해 음악을 추천해줄래?\r\n          </button>\r\n          <button onClick={handleSeatsButtonClick}>현재 예약 가능한 좌석 현황을 알려주라</button>\r\n        </div>\r\n      </div>\r\n      <form id=\"chatbot-chatform-unique\" onSubmit={handleSubmit}>\r\n        <input\r\n          id=\"chatbot-messageinput-unique\"\r\n          placeholder=\"typing your message\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">\r\n          <div className=\"sendBtn\">\r\n            <img src={sendBtn} alt=\"전송 아이콘\"></img>\r\n          </div>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}