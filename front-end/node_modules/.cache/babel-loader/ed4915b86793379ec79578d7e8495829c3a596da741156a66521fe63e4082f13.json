{"ast":null,"code":"import React from'react';import{Link,useLocation,useNavigate}from'react-router-dom';import'./MenuTap.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function MenuTap(){const location=useLocation();const navigate=useNavigate();const checkLogin=async(e,targetPath)=>{e.preventDefault();// 링크 기본 동작을 막음\nconsole.log('checkLogin 호출됨');try{const response=await fetch('/process/check-login',{method:'GET',headers:{'Content-Type':'application/json'},credentials:'include'// 쿠키를 포함하여 요청\n});const result=await response.json();console.log('응답 받음:',result);// 디버깅용 로그\nif(result.loggedIn){navigate(targetPath);// 로그인 상태라면 원래 가려던 경로로 이동\n}else{navigate('/loginpage',{state:{from:targetPath}});// 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\n}}catch(error){console.error('세션 확인 중 오류 발생:',error);navigate('/loginpage',{state:{from:targetPath}});// 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\n}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"MenuTap_layout\",children:[/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname==='/'?'underline':''),to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname==='/bag/form'?'underline':''),onClick:e=>checkLogin(e,'/bag/form'),children:\"Reservation\"}),/*#__PURE__*/_jsx(Link,{className:\"navbarMenu \".concat(location.pathname==='/notice'?'underline':''),href:\"/notice\",onClick:e=>checkLogin(e,'/notice'),children:\"Notice\"})]})});}export default MenuTap;","map":{"version":3,"names":["React","Link","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MenuTap","location","navigate","checkLogin","e","targetPath","preventDefault","console","log","response","fetch","method","headers","credentials","result","json","loggedIn","state","from","error","children","className","concat","pathname","to","onClick","href"],"sources":["C:/Users/가연/Desktop/Hackathon_real/Hackathon_JJIN/front-end/src/components/navbar/MenuTap.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport './MenuTap.css';\r\n\r\nfunction MenuTap() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const checkLogin = async (e, targetPath) => {\r\n    e.preventDefault(); // 링크 기본 동작을 막음\r\n    console.log('checkLogin 호출됨');\r\n    try {\r\n      const response = await fetch('/process/check-login', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // 쿠키를 포함하여 요청\r\n      });\r\n      const result = await response.json();\r\n      console.log('응답 받음:', result); // 디버깅용 로그\r\n      if (result.loggedIn) {\r\n        navigate(targetPath); // 로그인 상태라면 원래 가려던 경로로 이동\r\n      } else {\r\n        navigate('/loginpage', { state: { from: targetPath } }); // 로그인되지 않은 상태라면 로그인 페이지로 리디렉션, 원래 경로 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('세션 확인 중 오류 발생:', error);\r\n      navigate('/loginpage', { state: { from: targetPath } }); // 오류 발생 시 로그인 페이지로 리디렉션, 원래 경로 저장\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MenuTap_layout\">\r\n        <Link className={`navbarMenu ${location.pathname === '/' ? 'underline' : ''}`} to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link\r\n          className={`navbarMenu ${location.pathname === '/bag/form' ? 'underline' : ''}`}\r\n          onClick={(e) => checkLogin(e, '/bag/form')}\r\n        >\r\n          Reservation\r\n        </Link>\r\n        <Link\r\n          className={`navbarMenu ${location.pathname === '/notice' ? 'underline' : ''}`}\r\n          href=\"/notice\"\r\n          onClick={(e) => checkLogin(e, '/notice')}\r\n        >\r\n          Notice\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MenuTap;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACjE,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAU,UAAU,CAAG,KAAAA,CAAOC,CAAC,CAAEC,UAAU,GAAK,CAC1CD,CAAC,CAACE,cAAc,CAAC,CAAC,CAAE;AACpBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sBAAsB,CAAE,CACnDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,WAAW,CAAE,SAAW;AAC1B,CAAC,CAAC,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACpCR,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEM,MAAM,CAAC,CAAE;AAC/B,GAAIA,MAAM,CAACE,QAAQ,CAAE,CACnBd,QAAQ,CAACG,UAAU,CAAC,CAAE;AACxB,CAAC,IAAM,CACLH,QAAQ,CAAC,YAAY,CAAE,CAAEe,KAAK,CAAE,CAAEC,IAAI,CAAEb,UAAW,CAAE,CAAC,CAAC,CAAE;AAC3D,CACF,CAAE,MAAOc,KAAK,CAAE,CACdZ,OAAO,CAACY,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCjB,QAAQ,CAAC,YAAY,CAAE,CAAEe,KAAK,CAAE,CAAEC,IAAI,CAAEb,UAAW,CAAE,CAAC,CAAC,CAAE;AAC3D,CACF,CAAC,CAED,mBACEV,IAAA,CAAAI,SAAA,EAAAqB,QAAA,cACEvB,KAAA,QAAKwB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BzB,IAAA,CAACJ,IAAI,EAAC8B,SAAS,eAAAC,MAAA,CAAgBrB,QAAQ,CAACsB,QAAQ,GAAK,GAAG,CAAG,WAAW,CAAG,EAAE,CAAG,CAACC,EAAE,CAAC,GAAG,CAAAJ,QAAA,CAAC,MAEtF,CAAM,CAAC,cACPzB,IAAA,CAACJ,IAAI,EACH8B,SAAS,eAAAC,MAAA,CAAgBrB,QAAQ,CAACsB,QAAQ,GAAK,WAAW,CAAG,WAAW,CAAG,EAAE,CAAG,CAChFE,OAAO,CAAGrB,CAAC,EAAKD,UAAU,CAACC,CAAC,CAAE,WAAW,CAAE,CAAAgB,QAAA,CAC5C,aAED,CAAM,CAAC,cACPzB,IAAA,CAACJ,IAAI,EACH8B,SAAS,eAAAC,MAAA,CAAgBrB,QAAQ,CAACsB,QAAQ,GAAK,SAAS,CAAG,WAAW,CAAG,EAAE,CAAG,CAC9EG,IAAI,CAAC,SAAS,CACdD,OAAO,CAAGrB,CAAC,EAAKD,UAAU,CAACC,CAAC,CAAE,SAAS,CAAE,CAAAgB,QAAA,CAC1C,QAED,CAAM,CAAC,EACJ,CAAC,CACN,CAAC,CAEP,CAEA,cAAe,CAAApB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}